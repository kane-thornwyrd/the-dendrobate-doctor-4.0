---
import { ScrollToTocArrow } from "@/components/ui/ScrollToTocArrow"

import "/src/styles/global.css"

import { EdLCalendarDrawer } from "@/components/EdLCalendarDrawer"
import Header from "@/components/Header.astro"
import { AstroFont } from "astro-font"
import { SEO } from "astro-seo"
import { getCollection } from "astro:content"
import { ClientRouter, slide } from "astro:transitions"
import { isAfter, parse } from "date-fns"

export interface Props {
  title?: string
  frontmatter?: {
    title: string
    file: string
    url: string
  }
}

const { frontmatter, title: baseTitle } = Astro.props
const title = baseTitle ?? frontmatter?.title

const basedUrl = (url: string) => `${import.meta.env.BASE_URL}/${url}`

const edlDates = (await getCollection("edl"))
  .map(({ id }): { date: Date; id: string } => ({
    date: parse(id, "yyyyLLdd", new Date()),
    id,
  }))
  .toSorted((a, b) => (isAfter(a.date, b.date) ? 1 : -1))

const routingParams = Astro.params
---

<!doctype html>
<html lang="en">
  <head>
    <SEO
      charset="UTF-8"
      titleDefault="The Dendrobate Doctor"
      titleTemplate="%s - The Dendrobate Doctor"
      title={title}
      description=""
      extend={{
        link: [{ rel: "icon", type: "image/svg+xml", href: basedUrl("favicon.svg") }],
        meta: [
          { name: "viewport", content: "width=device-width" },
          { name: "robots", content: "max-image-preview:large" },
        ],
      }}
    />
    <AstroFont
      config={[
        {
          name: "Gantari",
          src: [
            {
              style: "lighter",
              weight: "100",
              path: import.meta.env.BASE_URL + "/fonts/gantari/gantari-latin.woff2",
            },
            {
              style: "light",
              weight: "200",
              path: import.meta.env.BASE_URL + "/fonts/gantari/gantari-latin.woff2",
            },
            {
              style: "normal",
              weight: "350",
              path: import.meta.env.BASE_URL + "/fonts/gantari/gantari-latin.woff2",
            },
            {
              style: "bold",
              weight: "700",
              path: import.meta.env.BASE_URL + "/fonts/gantari/gantari-latin.woff2",
            },
            {
              style: "extrabold",
              weight: "900",
              path: import.meta.env.BASE_URL + "/fonts/gantari/gantari-latin.woff2",
            },
          ],
          preload: true,
          display: "swap",
          selector: "body",
          fallback: "sans-serif",
        },
        {
          name: "Get Show",
          src: [
            {
              style: "lighter",
              weight: "100",
              path: import.meta.env.BASE_URL + "/fonts/get-show/get-show-latin.woff2",
            },
            {
              style: "light",
              weight: "200",
              path: import.meta.env.BASE_URL + "/fonts/get-show/get-show-latin.woff2",
            },
            {
              style: "normal",
              weight: "350",
              path: import.meta.env.BASE_URL + "/fonts/get-show/get-show-latin.woff2",
            },
            {
              style: "bold",
              weight: "700",
              path: import.meta.env.BASE_URL + "/fonts/get-show/get-show-latin.woff2",
            },
            {
              style: "extrabold",
              weight: "900",
              path: import.meta.env.BASE_URL + "/fonts/get-show/get-show-latin.woff2",
            },
          ],
          preload: true,
          display: "swap",
          selector: "h1",
          fallback: "sans-serif",
        },
      ]}
    />
    <script is:inline>
      ;(function (w, d, s, l, i) {
        w[l] = w[l] || []
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" })
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : ""
        j.async = true
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl
        f.parentNode.insertBefore(j, f)
      })(window, document, "script", "dataLayer", "GTM_KEY")
    </script>

    <ClientRouter />
  </head><body class="w-full dark:prose-p:text-slate-400">
    <Header />
    <div class="relative" transition:animate={slide({ duration: "0.4s" })}>
      <main>
        <slot />
      </main>
    </div>
    <EdLCalendarDrawer {...{ edlDates, routingParams }} client:load />
  </body>
</html>
