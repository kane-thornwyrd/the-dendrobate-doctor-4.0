---
import "../styles/global.css"

import { EdlCarousel, type EdlItem } from "@/components/ui/carousel"
import { EdLCalendarDrawerProvider } from "@/context/EdLCalendarDrawerContext"
import { getCollection } from "astro:content"
import { isAfter, parse } from "date-fns"

import Welcome from "../components/Welcome.mdx"
import Layout from "../layouts/Layout.astro"

const edlDates = (await getCollection("edl"))
  .map(
    ({ id, data: { content } }): EdlItem => ({
      date: parse(id, "yyyyLLdd", new Date()),
      content: content,
      id,
    })
  )
  .toSorted((a, b) => (isAfter(b.date, a.date) ? 1 : -1))
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme")
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"
  }
  const isDark = getThemePreference() === "dark"
  document.documentElement.classList[isDark ? "add" : "remove"]("dark")

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark")
      localStorage.setItem("theme", isDark ? "dark" : "light")
    })
    observer.observe(document.documentElement, { attributes: true, attributeFilter: ["class"] })
  }
</script>
<EdLCalendarDrawerProvider>
  <Layout>
    <div class="container bg-stone-100/85 rounded-4xl prose prose-h1:text-6xl prose-headings:mb-0 mx-auto">
      <h1 class="text-center pt-6 pb-0 mb-0">L'Ã‰cho des Labos</h1>
      <EdlCarousel items={edlDates} client:load />
      <div class="max-w-10/12 mx-auto pb-10">
        <Welcome />
      </div>
    </div>
  </Layout>
</EdLCalendarDrawerProvider>
